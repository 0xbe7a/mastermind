{"version":3,"file":"static/js/388.e877c74c.chunk.js","mappings":"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","sources":["wasm-workers.tsx","../../pkg/snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.js","../../pkg/web.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import * as Comlink from 'comlink';\nimport init, { initThreadPool, Solver } from 'wasm-mastermind';\n\nexport type OptimalGuess = {\n    guess: Uint8Array,\n    pre_prune_guesses: number,\n    post_prune_guesses: number,\n    possibilities: number,\n    time: number,\n    worstCase: number\n}\n\n//We need to wrap the Solver again, because Comlink does not wrap the return type of functions\n//minMax() returns an Guess object which uses local pointers and is worthless outside the worker context\nexport class WrappedSolver {\n    solver: Solver\n    constructor(pegs: number, colors: number) {\n        this.solver = Solver.init(pegs, colors);\n    }\n\n    addGuess(guess: Uint8Array, blackPegs: number, whitePegs: number): number {\n        return this.solver.add_guess_result(guess, blackPegs, whitePegs)\n    }\n\n    reset() {\n        this.solver.reset_guesses()\n    }\n\n    minMax(): OptimalGuess {\n        const start = performance.now();\n        const minMax = this.solver.min_max()\n        const end = performance.now();\n\n        return {\n            guess: minMax.get_guess(),\n            pre_prune_guesses: minMax.get_pre_prune_guesses(),\n            post_prune_guesses: minMax.get_post_prune_guesses(),\n            possibilities: minMax.get_possibilities(),\n            time: end - start,\n            worstCase: minMax.get_worst_case()\n        }\n        \n    }\n\n    get_final_awnser(): Uint8Array | undefined {\n        return this.solver.get_final_awnser()\n    }\n}\n\n\n\nasync function initWorkers() {\n    console.log(\"Loading wasm\")\n    await init();\n\n    console.log(\"Creating thread pool\")\n    await initThreadPool(navigator.hardwareConcurrency);\n\n    console.log(\"Init complete\")\n\n    return Comlink.proxy(WrappedSolver)\n}\n\nComlink.expose({ initSolver: initWorkers()});","/**\n * Copyright 2021 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: we use `wasm_bindgen_worker_`-prefixed message types to make sure\n// we can handle bundling into other files, which might happen to have their\n// own `postMessage`/`onmessage` communication channels.\n//\n// If we didn't take that into the account, we could send much simpler signals\n// like just `0` or whatever, but the code would be less resilient.\n\nfunction waitForMsgType(target, type) {\n  return new Promise(resolve => {\n    target.addEventListener('message', function onMsg({ data }) {\n      if (data == null || data.type !== type) return;\n      target.removeEventListener('message', onMsg);\n      resolve(data);\n    });\n  });\n}\n\nwaitForMsgType(self, 'wasm_bindgen_worker_init').then(async data => {\n  // # Note 1\n  // Our JS should have been generated in\n  // `[out-dir]/snippets/wasm-bindgen-rayon-[hash]/workerHelpers.js`,\n  // resolve the main module via `../../..`.\n  //\n  // This might need updating if the generated structure changes on wasm-bindgen\n  // side ever in the future, but works well with bundlers today. The whole\n  // point of this crate, after all, is to abstract away unstable features\n  // and temporary bugs so that you don't need to deal with them in your code.\n  //\n  // # Note 2\n  // This could be a regular import, but then some bundlers complain about\n  // circular deps.\n  //\n  // Dynamic import could be cheap if this file was inlined into the parent,\n  // which would require us just using `../../..` in `new Worker` below,\n  // but that doesn't work because wasm-pack unconditionally adds\n  // \"sideEffects\":false (see below).\n  //\n  // OTOH, even though it can't be inlined, it should be still reasonably\n  // cheap since the requested file is already in cache (it was loaded by\n  // the main thread).\n  const pkg = await import('../../..');\n  await pkg.default(data.module, data.memory);\n  postMessage({ type: 'wasm_bindgen_worker_ready' });\n  pkg.wbg_rayon_start_worker(data.receiver);\n});\n\n// Note: this is never used, but necessary to prevent a bug in Firefox\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1702191) where it collects\n// Web Workers that have a shared WebAssembly memory with the main thread,\n// but are not explicitly rooted via a `Worker` instance.\n//\n// By storing them in a variable, we can keep `Worker` objects around and\n// prevent them from getting GC-d.\nlet _workers;\n\nexport async function startWorkers(module, memory, builder) {\n  const workerInit = {\n    type: 'wasm_bindgen_worker_init',\n    module,\n    memory,\n    receiver: builder.receiver()\n  };\n\n  _workers = await Promise.all(\n    Array.from({ length: builder.numThreads() }, async () => {\n      // Self-spawn into a new Worker.\n      //\n      // TODO: while `new URL('...', import.meta.url) becomes a semi-standard\n      // way to get asset URLs relative to the module across various bundlers\n      // and browser, ideally we should switch to `import.meta.resolve`\n      // once it becomes a standard.\n      //\n      // Note: we could use `../../..` as the URL here to inline workerHelpers.js\n      // into the parent entry instead of creating another split point -\n      // this would be preferable from optimization perspective -\n      // however, Webpack then eliminates all message handler code\n      // because wasm-pack produces \"sideEffects\":false in package.json\n      // unconditionally.\n      //\n      // The only way to work around that is to have side effect code\n      // in an entry point such as Worker file itself.\n      const worker = new Worker(new URL('./workerHelpers.js', import.meta.url), {\n        type: 'module'\n      });\n      worker.postMessage(workerInit);\n      await waitForMsgType(worker, 'wasm_bindgen_worker_ready');\n      return worker;\n    })\n  );\n  builder.build();\n}\n","import { startWorkers } from './snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.js';\n\nlet wasm;\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0;\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedInt32Memory0;\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {number} num_threads\n* @returns {Promise<any>}\n*/\nexport function initThreadPool(num_threads) {\n    const ret = wasm.initThreadPool(num_threads);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} receiver\n*/\nexport function wbg_rayon_start_worker(receiver) {\n    wasm.wbg_rayon_start_worker(receiver);\n}\n\n/**\n*/\nexport class Guess {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Guess.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_guess_free(ptr);\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    get_guess() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.guess_get_guess(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    get_worst_case() {\n        const ret = wasm.guess_get_worst_case(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_possibilities() {\n        const ret = wasm.guess_get_possibilities(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_pre_prune_guesses() {\n        const ret = wasm.guess_get_pre_prune_guesses(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_post_prune_guesses() {\n        const ret = wasm.guess_get_post_prune_guesses(this.ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class Solver {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Solver.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_solver_free(ptr);\n    }\n    /**\n    * @param {number} pins\n    * @param {number} colors\n    * @returns {Solver}\n    */\n    static init(pins, colors) {\n        const ret = wasm.solver_init(pins, colors);\n        return Solver.__wrap(ret);\n    }\n    /**\n    * @returns {Guess}\n    */\n    min_max() {\n        const ret = wasm.solver_min_max(this.ptr);\n        return Guess.__wrap(ret);\n    }\n    /**\n    * @param {Uint8Array} guess\n    * @param {number} black_pins\n    * @param {number} white_pins\n    * @returns {number}\n    */\n    add_guess_result(guess, black_pins, white_pins) {\n        const ptr0 = passArray8ToWasm0(guess, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.solver_add_guess_result(this.ptr, ptr0, len0, black_pins, white_pins);\n        return ret >>> 0;\n    }\n    /**\n    */\n    reset_guesses() {\n        wasm.solver_reset_guesses(this.ptr);\n    }\n    /**\n    * @returns {Uint8Array | undefined}\n    */\n    get_final_awnser() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.solver_get_final_awnser(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU8FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class wbg_rayon_PoolBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(wbg_rayon_PoolBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wbg_rayon_poolbuilder_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    numThreads() {\n        const ret = wasm.wbg_rayon_poolbuilder_numThreads(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    receiver() {\n        const ret = wasm.wbg_rayon_poolbuilder_receiver(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    build() {\n        wasm.wbg_rayon_poolbuilder_build(this.ptr);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_module = function() {\n        const ret = init.__wbindgen_wasm_module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_startWorkers_04f63eca19916b8f = function(arg0, arg1, arg2) {\n        const ret = startWorkers(takeObject(arg0), takeObject(arg1), wbg_rayon_PoolBuilder.__wrap(arg2));\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n    imports.wbg.memory = maybe_memory || new WebAssembly.Memory({initial:18,maximum:16384,shared:true});\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(bytes, maybe_memory) {\n    const imports = getImports();\n\n    initMemory(imports, maybe_memory);\n\n    const module = new WebAssembly.Module(bytes);\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input, maybe_memory) {\n    if (typeof input === 'undefined') {\n        input = new URL('web_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports, maybe_memory);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [352], function() { return __webpack_require__(388); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"210\":\"5ff8653f\",\"267\":\"048cca77\",\"352\":\"71d63801\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/mastermind/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t388: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkmastermind_app\"] = self[\"webpackChunkmastermind_app\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(352).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["WrappedSolver","pegs","colors","solver","this","Solver","guess","blackPegs","whitePegs","add_guess_result","reset_guesses","start","performance","now","minMax","min_max","end","get_guess","pre_prune_guesses","get_pre_prune_guesses","post_prune_guesses","get_post_prune_guesses","possibilities","get_possibilities","time","worstCase","get_worst_case","get_final_awnser","initWorkers","console","log","init","initThreadPool","navigator","hardwareConcurrency","Comlink","initSolver","waitForMsgType","target","type","Promise","resolve","addEventListener","onMsg","data","removeEventListener","startWorkers","module","memory","builder","workerInit","receiver","all","Array","from","length","numThreads","worker","Worker","URL","postMessage","build","self","then","pkg","default","wbg_rayon_start_worker","wasm","cachedUint8Memory0","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getUint8Memory0","buffer","Uint8Array","decode","heap","fill","undefined","push","cachedInt32Memory0","heap_next","addHeapObject","obj","idx","getInt32Memory0","Int32Array","getArrayU8FromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","takeObject","ret","getObject","dropObject","num_threads","Guess","__destroy_into_raw","__wbg_guess_free","retptr","__wbindgen_add_to_stack_pointer","guess_get_guess","r0","r1","v0","slice","__wbindgen_free","guess_get_worst_case","guess_get_possibilities","guess_get_pre_prune_guesses","guess_get_post_prune_guesses","Object","create","prototype","__wbg_solver_free","solver_min_max","__wrap","black_pins","white_pins","ptr0","arg","malloc","set","passArray8ToWasm0","__wbindgen_malloc","len0","solver_add_guess_result","solver_reset_guesses","solver_get_final_awnser","pins","solver_init","wbg_rayon_PoolBuilder","__wbg_wbg_rayon_poolbuilder_free","wbg_rayon_poolbuilder_numThreads","wbg_rayon_poolbuilder_receiver","wbg_rayon_poolbuilder_build","load","imports","Response","WebAssembly","instantiateStreaming","headers","get","warn","arrayBuffer","bytes","instantiate","instance","Instance","getImports","wbg","__wbindgen_throw","arg0","arg1","Error","__wbindgen_module","__wbindgen_wasm_module","__wbindgen_memory","__wbg_startWorkers_04f63eca19916b8f","arg2","initMemory","maybe_memory","Memory","initial","maximum","shared","finalizeInit","exports","__wbindgen_start","initSync","Module","input","Request","fetch","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","f","e","chunkId","reduce","promises","u","miniCssF","prop","hasOwnProperty","call","Symbol","toStringTag","value","p","b","location","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next"],"sourceRoot":""}